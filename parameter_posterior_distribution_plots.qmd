---
title: "Experiment 3: Orientation with lower constrast"
format: html
---

## Libraries and settings required for analysis
```{r setup}
library(tidyverse)

library(cmdstanr)
library(fs)
library(ggtext)
library(glue)
library(kilter) # devtools:install_github("alexander-pastukhov/kilter", dependencies=TRUE)
library(loo)
library(patchwork)

source("utils.R")
```

##behavioral results
### per task
```{r}
plot_triptych1 <- function(t, exp, model){
  plots <- list()
  for (a_exp in exp){
    filename <- glue("ParameterPlots/{t}-posterior-prediction-{a_exp}-{model}.RDS")
    if (t == "abs"){
      if (a_exp == "exp01"){
        plots[[a_exp]] <- readRDS(filename)+ylim(2,86)}
      else{
        plots[[a_exp]] <- readRDS(filename)+ylim(25,65)}}
    else{
      if (a_exp == "exp01"){
        plots[[a_exp]] <- readRDS(filename)+xlim(-84,84)+ylim(-72,72)}
      else{
        plots[[a_exp]] <- readRDS(filename)+xlim(-40,40)+ylim(-35,35)}}
    }
  purrr::reduce(plots, `|`) + plot_layout(axis_titles = "collect", guides = 'collect')
  ggsave(glue("Figures/{t}-{model}.png"), units = "cm", width = 40, height = 13)
  ggsave(glue("Figures/{t}-{model}.svg"), units = "cm", width = 40, height = 13)
}
experiments <- c("exp01", "exp02", "exp03")
plot_triptych1("abs", experiments, "ubi_re_cte")
plot_triptych1("rel", experiments, "ubi_re_cte")
#plot_triptych1("abs", "exp01", "log_linear")

```


## Plot triptych for each parameter (per experiment)
```{r}
plot_triptych <- function(exp, parameter_name){
  plots <- list()
  for (a_exp in exp){
    filename <- glue("ParameterPlots/posterior-distribution-{a_exp}-{parameter_name}.RDS")
    plots[[a_exp]] <- readRDS(filename)#+xlim(0,80)
  }
  purrr::reduce(plots, `+`) +
  #geom_vline(xintercept = 0, linetype = "longdash", linewidth = 0.7) + 
    plot_layout(guides = 'collect', axis_titles = "collect")
}

experiments <- c("exp01", "exp02", "exp03")

plot_triptych(experiments, "Maximal Response Weight")
ggsave("Figures/w_max_r.png", units = "cm", width = 28, height = 7)
ggsave("Figures/w_max_r.svg", units = "cm", width = 28, height = 7)

plot_triptych(experiments, "Maximal Evidence Weight")
ggsave("Figures/w_max_e.png", units = "cm", width = 28, height = 7)
ggsave("Figures/w_max_e.svg", units = "cm", width = 28, height = 7)

plot_triptych(experiments, "Central Tendency Weight")
ggsave("Figures/w_ct.png", units = "cm", width = 28, height = 7)
ggsave("Figures/w_ct.svg", units = "cm", width = 28, height = 7)

plot_triptych(experiments, "Prior Relevance")
ggsave("Figures/lambda.png", units = "cm", width = 28, height = 7)
ggsave("Figures/lambda.svg", units = "cm", width = 28, height = 7)

#plot_triptych(experiments, "Beta Central Tendency")
#ggsave("Figures/b_ct.png", units = "cm", width = 28, height = 7)
#ggsave("Figures/b_ct.svg", units = "cm", width = 28, height = 7)

# Sigma
((readRDS("ParameterPlots/posterior-distribution-exp01-Sigma Max.RDS"))|
  readRDS("ParameterPlots/posterior-distribution-exp02-Sigma.RDS")| readRDS("ParameterPlots/posterior-distribution-exp03-Sigma.RDS")) + plot_layout(guides = 'collect', axis_titles = "collect")
ggsave("Figures/sigma.png", units = "cm", width = 28, height = 7)
ggsave("Figures/sigma.svg", units = "cm", width = 28, height = 7)
```


```{r}
# weights
w01 <- readRDS("Weights/weights01.RDS") |>
  mutate(exp = "Exp.1: Numerosity")
w02 <- readRDS("Weights/weights02.RDS") |>
  mutate(exp = "Exp.2: Orientation (high contrast)")
w03 <- readRDS("Weights/weights03.RDS") |>
  mutate(exp = "Exp.3: Orientation (low contrast)")

weights <- 
  bind_rows(w01, w02, w03) |>
  mutate(exp = factor(exp)) |>
  mutate(Parameter = fct_drop(Parameter))

ggplot(weights, aes(x = Task, y = mu, color = Task, fill = Task)) +
  geom_boxplot(show.legend = FALSE, outlier.shape = NA, alpha = 0.5) +
  # ggforce::geom_sina(show.legend = FALSE, alpha = 0.05) +
  scale_fill_manual(values = c("single" = "#eb6972ff", "dual" = "#336a97ff"))+
  scale_color_manual(values = c("single" = "#eb6972ff", "dual" = "#336a97ff"))+
  geom_hline(yintercept = 0, linetype = "dashed") +
  #facet_wrap(. ~ Parameter) +
  scale_y_continuous(name = "Weight") +#, limits = c(-0.25, 1)) 
  facet_grid(exp ~ Parameter)

ggsave("Figures/weights.png", units = "cm", width = 17, height = 17)
ggsave("Figures/weights.svg", units = "cm", width = 17, height = 17)
```

```{r}
att_diff <-
  weights |>
  pivot_wider(names_from = Task, values_from = mu) |>
  mutate(AttDiff = dual - single) |>
  group_by(Parameter, exp) |>
  summarise(P = ifelse(median(AttDiff) > 0, mean(AttDiff>0), mean(AttDiff<0)),
            Info = sprintf("%.2f<br/>%.2f,%.2f<br/>%.1f%%", mean(AttDiff), kilter::lower_ci(AttDiff), kilter::upper_ci(AttDiff), 100 * P),
            .groups = "drop") |>
  mutate(X = 3 * ( as.integer(exp) - 1) + 1.5,
         Y = ifelse(Parameter == "We", -0.88, -0.88))
         # Y = ifelse(Parameter == "We", 0.7, -0.88))

att_labels <-
  tibble(X = 4.5,
         Y = c(-0.68, -0.68, -0.68),
         # Y = c(-0.68, 0.9, -0.68),
         Parameter = factor(levels(att_diff$Parameter), levels = levels(att_diff$Parameter)),
         Label = "<span style='color:#336a97ff;font-weight: bolder;'>W<sub>dual</sub></span> - <span style='color:#eb6972ff;font-weight: bolder;'>W<sub>single</sub></span>",
         Xmin = 0, Xmax = 9,
         YminU = c(-0.75, -0.75, -0.75), YmaxU = c(-0.58, -0.58, -0.58),
         Ymin = c(-1, -1, -1), Ymax = c(-0.58, -0.58, -0.58))
         # YminU = c(-0.75, 0.83, -0.75), YmaxU = c(-0.58, 1, -0.58),
         # Ymin = c(-1, 0.57, -1), Ymax = c(-0.58, 1, -0.58))

weights |>
  mutate(X =  3 * ( as.integer(exp) - 1) + as.integer(Task),
         Condition = factor(glue("{exp}-{Task}"))) |>

ggplot(aes(x = X, y = mu)) +
  geom_hline(yintercept = c(0), linetype = "dashed", color = "gray") +
  geom_rect(data = att_labels, aes(y = Y, xmin = Xmin, xmax = Xmax, ymin = Ymin, ymax = Ymax), fill = "gray", color = NA) +
  geom_rect(data = att_labels, aes(y = Y, xmin = Xmin, xmax = Xmax, ymin = YminU, ymax = YmaxU), fill = "#FEFEFE", color = NA) +
  geom_richtext(data = att_labels, aes(label = Label, x = X, y = Y), label.colour = NA, fill = NA) +
  geom_richtext(data = att_diff, aes(label = Info, y = Y), size = 2.5, label.colour = NA, fill = NA) +
  geom_boxplot(aes(group = Condition, color = Task, fill = Task), alpha = 0.5, outlier.shape = NA) +
  # ggforce::geom_sina(show.legend = FALSE, alpha = 0.01) +
  facet_wrap(. ~ Parameter, labeller = labeller(Parameter = c("Wr" = "Prior Response", "We" = "Prior Evidence", "Wct" = "Average Evidence"))) +
  scale_x_continuous(name = "Experiment", breaks = c(1.5, 4.5, 7.5), labels = 1:3, limits = c(0, 9), expand = c(0, 0)) +
  scale_y_continuous(name = "Repulsive ← Weight → Attractive", limits = c(-1, 1), expand = c(0, 0),
                     sec.axis = dup_axis(name = NULL, breaks = c(-0.8, -0.88, -0.96), labels = c("Mean", "97% CI", "Pr"))) +
                     # sec.axis = dup_axis(name = NULL, breaks = c(-0.8, -0.88, -0.96, 0.78, 0.7, 0.62), labels = rep(c("Mean", "97% CI", "Pr"), 2))) +
    scale_fill_manual(values = c("single" = "#eb6972ff", "dual" = "#336a97ff"))+
  scale_color_manual(values = c("single" = "#eb6972ff", "dual" = "#336a97ff")) +
  theme(legend.position = "bottom", axis.ticks.y.right = element_blank(), axis.text.y.right = element_text(size = 8))

ggsave("Figures/all-weights.png", units = "cm", width = 16, height = 12)
ggsave("Figures/all-weights.svg", units = "cm", width = 16, height = 12)
```


```{r}
compare_based_on_rank <- function(df) {
  param_rank <-
    df |>
    group_by(Parameter) |>
    summarise(Avg = median(abs(mu)), .groups = "drop") |>
    arrange(desc(Avg))
  
  df_wide <-
    df |>
    mutate(mu = abs(mu)) |>
    pivot_wider(names_from = Parameter, values_from = mu) |>
    select(-.draw) |>
    relocate(param_rank$Parameter)
  
  tibble(iParam = 1:2) |>
    group_by(iParam) |>
    mutate(Parameter = param_rank$Parameter[iParam],
           Info = sprintf("%s>%s\n%.2f\n%.2f\n%.2f\n%.1f%%",
                          param_rank$Parameter[iParam], param_rank$Parameter[iParam + 1],
                          kilter::lower_ci(df_wide[[iParam]]-df_wide[[iParam + 1]]),
                          mean(df_wide[[iParam]]-df_wide[[iParam + 1]]),
                          kilter::upper_ci(df_wide[[iParam]]-df_wide[[iParam + 1]]),
                          100 * mean(df_wide[[iParam]]>df_wide[[iParam + 1]]))) |>
    ungroup() |>
    select(-iParam) |>
    bind_rows(tibble(Parameter = param_rank$Parameter[3],
                     Info = "\n[CI\nΔ\nCI]\nPr"))
}

abs_weights_comparison <-
  weights |>
  group_by(exp, Task) |>
  nest() |>
  mutate(Comparison = purrr::map(data, ~compare_based_on_rank(.))) |>
  select(-data) |>
  unnest(Comparison)
```

```{r}
ggplot(weights, aes(x = Parameter, y = abs(mu))) +
  geom_rect(xmin = 0, xmax = 4, ymin = 1, ymax = 1.4, fill = "white") +
  geom_boxplot(outlier.shape = NA, aes(color = Task, fill = Task), alpha = 0.5, show.legend = FALSE) +
  geom_text(data = abs_weights_comparison, aes(label = Info), y = 1.2, size = 2.5) +
  facet_grid(Task ~ exp) +
  scale_y_continuous(name = "Absolute weight", limits = c(0, 1.4), expand = c(0, 0)) +
  scale_x_discrete(name = NULL, labels = c("Wr\nResponse", "We\nEvidence", "Wct\nAverage\nEvidence"))

ggsave("Figures/absolute-weights.png", units = "cm", width = 16, height = 16)

```
