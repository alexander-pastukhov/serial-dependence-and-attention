---
title: "weights-table"
format: docx
---
## Libraries and settings required for analysis
```{r setup}
library(tidyverse)
library(dplyr)
library(glue)
```

## Weight tables
```{r}
w01 <- readRDS("weights01.RDS") |>
  mutate(exp = "Exp.1: Numerosity")
w02 <- readRDS("weights02.RDS") |>
  mutate(exp = "Exp.2: Orientation (high contrast)")
w03 <- readRDS("weights03.RDS") |>
  mutate(exp = "Exp.3: Orientation (low contrast)")
weights <- bind_rows(w01,w02,w03)

weights_diff_df <-
  weights|>
  group_by(exp, Task)|>
  pivot_wider(names_from = "Parameter", values_from = mu)|>
  mutate(Wr = ifelse(Wr>0, Wr, Wr*-1),
         We = ifelse(We>0, We, We*-1),
         Wct = ifelse(Wct>0, Wct, Wct*-1),
         Wr_We = Wr-We,
         Wr_Wct = Wr-Wct,
         Wct_We = Wct-We)|>
  summarise(M_Wr_We = round(mean(Wr_We),2),
            M_Wr_Wct = round(mean(Wr_Wct),2),
            M_Wct_We = round(mean(Wct_We),2),
            CI_Wr_We = glue("[{round(kilter::lower_ci(Wr_We, CI = 0.97),2)}, {round(kilter::upper_ci(Wr_We, CI = 0.97),2)}]"),
            CI_Wr_Wct = glue("[{round(kilter::lower_ci(Wr_Wct, CI = 0.97),2)}, {round(kilter::upper_ci(Wr_Wct, CI = 0.97),2)}]"),
            CI_Wct_We = glue("[{round(kilter::lower_ci(Wct_We, CI = 0.97),2)}, {round(kilter::upper_ci(Wct_We, CI = 0.97),2)}]"),
            WrWct = sum(Wr>Wct)/n(),
            WrWe = sum(Wr>We)/n(),
            WctWe = sum(Wct>We)/n(),
            P = glue("{round(WrWct * WrWe * WctWe * 100, 1)}%"),
            P_WrWct = glue("{round(WrWct * 100, 1)}%"),
            P_WrWe = glue("{round(WrWe * 100, 1)}%"),
            P_WctWe = glue("{round(WctWe * 100, 1)}%"),
            .groups = "drop")|>
   mutate("Wr-We" = glue("{M_Wr_We} {CI_Wr_We}"),
          "Wr-Wct" = glue("{M_Wr_Wct} {CI_Wr_Wct}"),
          "Wct-We" = glue("{M_Wct_We} {CI_Wct_We}"))|>
  select(exp, Task, "Wr-We", P_WrWe, "Wr-Wct", P_WrWct, "Wct-We", P_WctWe, P)

abs_weights_df <-
  weights|>
  group_by(exp, Parameter, Task)|>
  summarise(Mean = round(mean(mu),2),
            CI = glue("[{round(kilter::lower_ci(mu, CI = 0.97),2)}, {round(kilter::upper_ci(mu, CI = 0.97),2)}]"),
            SD = round(sd(mu),2),
            #Mean_CI = glue("{Mean} {CI}"),
            Mean_SD = glue("{Mean} Â± {SD}"),
            #P_0 = glue("{round(sum(mu>0)/4000 * 100, 1)}%"),
            P_0 = ifelse(Mean > 0, glue("{round(sum(mu>0)/4000 * 100, 1)}%"), glue("{100-round(sum(mu>0)/4000 * 100, 1)}%")),
            .groups = "drop")|>
  select(-Mean, -CI, -SD)#|>
 # pivot_wider(names_from = c(Parameter), values_from = Mean_SD)

attention_diff_df <- weights|>
    group_by(exp, Parameter)|>
    pivot_wider(names_from = "Task", values_from = mu)|>
    mutate(diff = dual-single)|>
    summarise(Mean = round(mean(diff),2),
              CI = glue("[{round(kilter::lower_ci(diff, CI = 0.97),2)}, {round(kilter::upper_ci(diff, CI = 0.97),2)}]"),
              P = round(mean(dual > single),3),
              .groups = "drop")|>
   mutate(D_s = Mean>0,
          diff_str = glue("D-S = {Mean} {CI}"),
          prob_str = ifelse(D_s, glue("P(D>S) = {P*100}%"), glue("P(D<S) = {100 - P * 100}%")),
          diff = glue("{diff_str}, {prob_str}"))|>
   select(exp, Parameter, diff)|>
   pivot_wider(names_from = c(Parameter), values_from = diff)
```

### Absolute and Diff(D-S)
```{r}
knitr::kable(weights_diff_df, caption = "Difference between weights")
knitr::kable(attention_diff_df, caption = "Difference between attention conditions for weights")
```